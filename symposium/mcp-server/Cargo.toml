[package]
name = "symposium-mcp"
version = "0.1.0"
edition = "2024"
description = "Rust implementation of Symposium MCP server for code review integration"
authors = ["Niko Matsakis"]
license = "MIT"

[lib]
name = "symposium_mcp"
path = "src/lib.rs"

[[bin]]
name = "symposium-mcp"
path = "src/main.rs"

[dependencies]
# Official MCP SDK
rmcp = { workspace = true }

# JSON serialization
serde = { workspace = true }
serde_json = { workspace = true }

# JSON Schema support for MCP tools
schemars = { workspace = true }

# Async runtime
tokio = { workspace = true, features = ["net", "io-util"] }

# Async utilities
futures = "0.3"

# UUID generation for IPC message tracking
uuid = { workspace = true }

# Error handling
anyhow = { workspace = true }
thiserror = { workspace = true }

# Logging
tracing = { workspace = true }
tracing-subscriber = { workspace = true }
tracing-appender = "0.2"
indoc = "2.0"

# Command line argument parsing
clap = { version = "4.0", features = ["derive"] }

# Unix system calls for process monitoring
nix = { version = "0.27", features = ["signal", "process"] }

# Git operations for synthetic PR functionality
git2 = "0.18"
regex = "1.0"
chrono = { version = "0.4", features = ["serde"] }

# eg library dependencies
cargo_metadata = "0.21.0"
semver = "1.0"
home = "0.5"
dirs = "5.0"
flate2 = "1.0"
tar = "0.4"
reqwest = { version = "0.12", features = ["json"] }
crates_io_api = "0.11.0"

# File system traversal with gitignore support
ignore = "0.4"
pulldown-cmark = "0.13.0"
urlencoding = "2.1.3"
pulldown-cmark-to-cmark = "21.0.0"

# Embedded file resources
rust-embed = "8.0"

[dev-dependencies]
tokio-test = { workspace = true }
uuid = { version = "1.0", features = ["v4"] }
# Add client feature for testing
rmcp = { version = "0.8", features = [
    "server",
    "transport-io",
    "schemars",
    "client",
] }
expect-test = "1.5.1"
tempfile = "3.8"
scopeguard = "1.2"
test-utils = { path = "test-utils" }
annotate-snippets = { version = "0.11", features = ["testing-colors"] }
